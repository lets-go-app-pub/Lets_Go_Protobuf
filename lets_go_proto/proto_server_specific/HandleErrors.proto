syntax = "proto3";

package handle_errors;

import "LoginToServerBasicInfo.proto";
import "ErrorOriginEnum.proto";
import "ErrorMessage.proto";
import "ErrorHandledMoveReasonEnum.proto";

message SearchErrorsRequest {
  LoginToServerBasicInfo login_info = 1;

  bool all_error_origin_types = 2;

  //only used if all_error_origin_types == false
  repeated ErrorOriginType types = 3;

  bool all_error_urgency_levels = 4;

  //only used if all_error_urgency_levels == false
  repeated ErrorUrgencyLevel levels = 5;

  bool all_version_numbers = 6;

  //values only used if all_version_numbers == false
  uint32 min_version_number = 7;
  uint32 max_version_number = 8;

  bool all_file_names = 15;

  //values only used if all_file_names == false
  repeated string file_names = 16;

  bool all_line_numbers = 17;

  //values only used if all_line_numbers == false
  repeated uint32 line_numbers = 18;

  bool all_timestamps = 12;

  //values only used if all_timestamps == false
  bool before_timestamp = 13;
  uint64 search_timestamp = 14;

  bool all_android_api = 9;

  //values only used if all_android_api == false
  uint32 min_api_number = 10;
  uint32 max_api_number = 11;

  bool all_device_names = 19;

  //values only used if all_device_names == false
  repeated string device_names = 20;
}

message DeviceNameSearchResults {
  string device_name = 1;
  uint32 number_times_device_name_found = 2;
}

message ApiNumberSearchResults {
  uint32 api_number = 1;
  uint32 number_times_api_number_found = 2;
}

message ErrorStatistics {
  uint64 number_times_error_occurred = 1;

  ErrorOriginType error_origin = 2;
  ErrorUrgencyLevel error_urgency_level = 3;
  uint32 version_number = 4;
  string file_name = 5;
  uint32 line_number = 6;

  int64 most_recent_timestamp = 7;

  repeated DeviceNameSearchResults device_names = 8;
  repeated ApiNumberSearchResults api_numbers = 9;
}

message SearchErrorsResponse {
  bool success = 1;

  //set if success == false
  string error_msg = 2;

  //set if success == true
  repeated ErrorStatistics error_message_statistics = 3;
}

message ErrorParameters {
  ErrorOriginType error_origin = 2;
  uint32 version_number = 3;
  string file_name = 4;
  uint32 line_number = 5;
}

message ExtractErrorsRequest {
  LoginToServerBasicInfo login_info = 1;

  ErrorParameters error_parameters = 2;

  //max number of bytes to send back to the client
  int64 max_number_bytes = 3;
}

message ExtractErrorsResponse {
  bool success = 1;

  //set if success == false
  string error_msg = 2;

  //set if success == true
  ErrorMessage error_message = 3;
}

message DeleteSingleErrorRequest {
  LoginToServerBasicInfo login_info = 1;

  string error_oid = 2;

  string reason_for_description = 3;
}

message DeleteSingleErrorResponse {
  bool success = 1;

  //set if success == false
  string error_msg = 2;
}

message SetErrorToHandledRequest {
  LoginToServerBasicInfo login_info = 1;

  ErrorParameters error_parameters = 2;

  ErrorHandledMoveReason reason = 3;

  string reason_for_description = 4;
}

message SetErrorToHandledResponse {
  bool success = 1;

  //set if success == false
  string error_msg = 2;
}

service HandleErrorsService {
  rpc SearchErrorsRPC(SearchErrorsRequest) returns (SearchErrorsResponse) {}
  rpc ExtractErrorsRPC(ExtractErrorsRequest) returns (stream ExtractErrorsResponse) {}
  rpc DeleteSingleErrorRPC(DeleteSingleErrorRequest) returns (DeleteSingleErrorResponse) {}
  rpc SetErrorToHandledRPC(SetErrorToHandledRequest) returns (SetErrorToHandledResponse) {}
}
